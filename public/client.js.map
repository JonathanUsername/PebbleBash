{"version":3,"sources":["../client/app.js","../client/base-ctrl.js","../client/client.js","../client/loading.js","../client/player.js","../client/room-ctrl.js","../client/send.js","../client/socket.js"],"names":[],"mappings":"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","file":"client.js","sourcesContent":["const app = angular.module('pebble-bash', ['ui.router'])\n\napp.run((\n  $rootScope,\n  $state,\n  $window,\n  $log,\n  $stateParams,\n  $q\n) => {\n  $rootScope.$on('$stateChangeError', $log.log.bind($log));\n\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n\n  console.log('starting module')\n\n})","app.controller('baseCtrl', \n  ($scope, $rootScope, $state, $stateParams, socket, apiService, Player, loading) => {\n\n    console.log('starting base controller')\n\n    $scope.player = Player;\n\n    console.log($state.current.name)\n\n\n    $scope.newGame = function() {\n      $state.go('base.room', {\n        roomId: 'new'\n      }, {\n        reload: true\n      })\n    }\n\n  })\n\nangular.module('pebble-bash').config(function (\n  $stateProvider,\n  $urlRouterProvider\n) {\n\n  // Default route is base\n  $urlRouterProvider.otherwise('/');\n\n  $stateProvider\n    .state('base', {\n      url: '/',\n      controller: 'baseCtrl',\n      templateUrl: 'base.html',\n      resolve: {\n        leaveRooms: (socket) => {\n          // Make sure we're not in a room\n          console.log('resolving leave')\n          socket.emit('leave');\n        },\n        socketConnected: (Player) => {\n          return Player.resolveConnect();\n        }\n      }\n    });\n});\n","// const LIMIT = 5;\n\n// const socket = io();\n// const indicator = $('#indicator');\n\n// if (!window.DeviceMotionEvent) {\n//   alert('Device motion is not supported! You can\\'t have any fun, sorry.');\n// }\n\n// if (localStorage.name) {\n//   $('#name').val(localStorage.name);\n// }\n\n// $('#newGame').click(newGame);\n// $('#joinGame').click(joinGame);\n// $('#startGame').click(startGame);\n// $('#lose').click(lose);\n// // $('.playAgain').click(playAgain);\n\n// function send (url, data) {\n//   const params = data ? data : {};\n\n//   const name = $('#name').val();\n//   localStorage.name = name;\n\n//   params.name = name;\n//   params.playerId = socket.id;\n\n//   return $.ajax(url, {\n//     method: 'POST',\n//     data: params\n//   });\n// }\n\n// function newGame () {\n//   const url = '/room/new';\n//   send(url)\n//     .done(data => {\n//       $('.starting-info').hide();\n//       $('#gameName').text(`Your game name is: ${data.roomId}`)\n//       localStorage.gameName = data.roomId;\n//       $('.waiting').show();\n//     })\n// }\n\n// function joinGame () {\n//   const url = '/room/' + $('#gameId').val();\n//   send(url)\n//     .done(data => {\n//       if (data.error) {\n//         alert(room.error)\n//       } else {\n//         $('.starting-info').hide();\n//         $('#gameName').text(`Your game name is: ${data.roomId}`)\n//         localStorage.gameName = data.roomId;\n//         $('.waiting').show();\n//       }\n//     })\n//   $('gameId').val();\n// }\n\n// function changeState (nextState) {\n\n// }\n\n// let currentState;\n// currentState = 'initial';\n\n// const state = {\n//   initial: () => {\n//     $('.starting-info').show();\n//     $('#win-screen').hide();\n//     $('#lose-screen').hide();\n//     $('#gameName').text('');\n//     $('.waiting').hide();\n//   },\n//   waitingRoom: () => {\n//     $('.starting-info').hide();\n//     $('#gameName').text(`Your game name is: ${data.roomId}`)\n//     $('.waiting').show();\n//   },\n//   playing: () => {\n\n//   },\n//   won: () => {\n\n//   },\n//   lost: () => {\n\n//   }\n// }\n\n\n// function startGame () {\n\n//   // const name = $('#name').val();\n\n//   // if (!name) return alert('You must tell me who you are!');\n\n//   window.addEventListener('devicemotion', listener, false);\n\n//   indicator.addClass('alive').show();\n\n//   socket.on('gameover', data => {\n//     window.removeEventListener('devicemotion', listener, false)\n//     console.log(data)\n//     console.log(socket.id)\n//     var winner = data.winner;\n//     var won = isWinner(data);\n//     if (won) {\n//       winner = 'YOU';\n//       $('#win-screen').show();\n//     } else {\n//       $('#lose-screen').show();\n//     }\n//     indicator.removeClass('alive')\n//       .removeClass('loser')\n//       .text('')\n//       .hide();\n//   })\n// }\n\n// function isWinner(data) {\n//   return data.winnerId === socket.id\n// }\n\n\n// function listener(ev) {\n//   if (!ev.acceleration) return;\n//   const acc = ev.acceleration;\n//   jogHandler(acc.x, acc.y, acc.z);\n// }\n\n// function jogHandler(x, y, z) {\n//   const arr = [x, y, z]\n//   if (arr.filter(overTheLimit).length > 0) {\n//     lose(listener);\n//   }\n// }\n\n// function overTheLimit(coord) {\n//   if (coord > LIMIT) {\n//       return true;\n//   }\n//   return false;\n// }\n\n// function lose() {\n//   window.removeEventListener('devicemotion', listener, false);\n//   indicator.removeClass('alive').addClass('loser').text('LOSER');\n//   socket.emit('loser', {\n//     id: socket.id\n//   })\n//   window.navigator.vibrate(500);\n// }","app.factory('loading', function () {\n  var loading = false;\n  return {\n    isLoading: function () {\n      return loading;\n    },\n    start: function () {\n      loading = true;\n    },\n    finish: function () {\n      loading = false\n    }\n  };\n})","app.factory('Player', function (\n  $http,\n  $q,\n  $log,\n  $rootScope,\n  socket,\n  loading,\n  $stateParams\n) {\n\n  const Player = {\n    id: '',\n    name: localStorage.playerName || ''\n  };\n\n  const connectedPromise = $q.defer();\n\n  Player.resolveConnect = () => {\n    return connectedPromise.promise;\n  };\n\n  Player.joinRoom = (roomId) => {\n    Player.room = roomId;\n    console.log('emitting join', roomId)\n    socket.emit('join', Player)\n  }\n\n  socket.on('connect', () => {\n    console.log('socket connected');\n    Player.id = socket.getId();\n    loading.finish();\n    if ($stateParams.roomId) {\n      console.log('stateparams exists so joining')\n      Player.joinRoom($stateParams.roomId);\n    }\n    connectedPromise.resolve(Player.id);\n  })\n\n  Player.getId = () => this.id;\n  Player.getName = () => this.name;\n\n  return Player\n})","app.controller('roomCtrl', \n  ($scope, $rootScope, $state, $location, $stateParams, socket, apiService, roomJoined, Player) => {\n\n    console.log('starting room controller')\n\n    $scope.others = [];\n\n\n    $scope.others = $scope.others.concat(roomJoined.others)\n\n    // Update room if new\n    $scope.roomJoined = roomJoined.roomId;\n    $state.go('.', {\n      roomId: $scope.roomJoined\n    }, {reload: false})\n\n    $scope.something = 'yeah';\n    $scope.url = $location.absUrl();\n\n\n    socket.on('room-update', (others) => {\n      console.log('Room update: ', others)\n      $scope.others = others;\n    })\n\n    console.log('joining room')\n    Player.joinRoom($stateParams.roomId);\n\n    $scope.goBack = () => {\n      socket.emit('leave');\n      $state.go('base');\n    };\n\n    socket.on('start', (msg) => {\n      console.log('STARTING!', msg)\n      $state.go('base.')\n    })\n\n    $scope.ready = () => {\n      if (Player.name && $scope.roomJoined) {\n        socket.emit('ready', {\n          roomId: $scope.roomJoined,\n          name: Player.name\n        })\n      } else {\n        alert('You have no name? How can you win if you have no name??')\n      }\n    };\n\n  })\n\nangular.module('pebble-bash').config(function (\n  $stateProvider\n) {\n\n  $stateProvider\n    .state('base.room', {\n        url: 'room/:roomId/',\n        controller: 'roomCtrl',\n        templateUrl: 'room.html',\n        resolve: {\n          roomJoined: ($stateParams, apiService, socketConnected, Player) => {\n            return apiService.send(`/room/${$stateParams.roomId}`, {\n              playerId: Player.id,\n              name: Player.name || 'Anonymous'\n            })\n          }\n        }\n      });\n\n});\n","\napp.factory('apiService', function (\n  $http,\n  $q,\n  $log,\n  $rootScope,\n  socket,\n  loading,\n  Player\n) {\n\n  return {\n    send: (url, data) => {\n\n      const deferred = $q.defer();\n\n      loading.start();\n\n      const params = data ? data : {};\n\n      params.name = params.name || Player.name;\n      params.playerId = params.playerId || Player.id;\n\n      localStorage.playerName = Player.name;\n\n      console.log(params)\n\n      $http.post(url, params).then((resp) => {\n        loading.finish();\n        deferred.resolve(resp.data);\n      }, (err) => {\n        loading.finish();\n        alert(err.data.message);\n        deferred.reject();\n      });\n\n      return deferred.promise;\n    }\n  }\n\n})\n","app.factory('socket', function ($rootScope) {\n  var socket = io.connect();\n\n  socket.on('disconnect', () => {\n    console.log('DISCONNECTED FROM SOCKET')\n  })\n\n  socket.on('message', (data) => {\n    console.log('message:', data)\n  })\n\n  return {\n    on: function (eventName, callback) {\n      console.log('registering', eventName)\n      socket.on(eventName, function () {  \n        var args = arguments;\n        $rootScope.$apply(function () {\n          callback.apply(socket, args);\n        });\n      });\n    },\n    emit: function (eventName, data, callback) {\n      socket.emit(eventName, data, function () {\n        var args = arguments;\n        $rootScope.$apply(function () {\n          if (callback) {\n            callback.apply(socket, args);\n          }\n        });\n      })\n    },\n    getId: function() {\n      return socket.id;\n    }\n  };\n});"]}