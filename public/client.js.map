{"version":3,"sources":["../client/app.js","../client/base-ctrl.js","../client/loading.js","../client/play-ctrl.js","../client/player.js","../client/room-ctrl.js","../client/send.js","../client/socket.js"],"names":[],"mappings":"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","file":"client.js","sourcesContent":["const app = angular.module('pebble-bash', ['ui.router'])\n\napp.run((\n  $rootScope,\n  $state,\n  $log,\n  $stateParams,\n  loading\n) => {\n  $rootScope.$on('$stateChangeError', $log.log.bind($log));\n  $rootScope.$on('$stateChangeStart', () => { loading.start(); });\n  $rootScope.$on('$stateChangeSuccess', () => { loading.finish(); });\n\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n\n  console.log('starting module')\n\n})","app.controller('baseCtrl', \n  ($scope, $state, Player) => {\n\n    console.log('starting base controller')\n\n    $scope.player = Player;\n\n    $scope.newGame = function() {\n      $state.go('base.room', {\n        roomId: 'new'\n      }, {\n        reload: true, // Not sure this is needed\n        location: false\n      })\n    }\n\n  })\n\nangular.module('pebble-bash').config(function (\n  $stateProvider,\n  $urlRouterProvider,\n  $urlMatcherFactoryProvider\n) {\n\n  // Default route is base\n  $urlRouterProvider.otherwise('/');\n\n  // Allow no trailing slash\n  $urlMatcherFactoryProvider.strictMode(false)\n\n  $stateProvider\n    .state('base', {\n      url: '/',\n      controller: 'baseCtrl',\n      templateUrl: 'base.html',\n      resolve: {\n        leaveRooms: (socket) => {\n          // Make sure we're not in a room\n          console.log('resolving leave')\n          socket.emit('leave');\n        },\n        socketConnected: (Player) => {\n          return Player.resolveConnect();\n        }\n      }\n    });\n});\n","app.factory('loading', function () {\n  var loading = false;\n  return {\n    isLoading: function () {\n      return loading;\n    },\n    start: function () {\n      loading = true;\n    },\n    finish: function () {\n      loading = false\n    }\n  };\n})","app.controller('playCtrl', \n  ($scope, $state, socket, Player, $location) => {\n\n    console.log('starting play controller')\n\n    // Limit for sharp movement\n    const LIMIT = 5;\n\n    // CHANGEME\n    $scope.dev = $location.host() === 'localhost';\n\n    $scope.lose = lose;\n    $scope.playState = 'alive';\n\n    window.addEventListener('devicemotion', listener, false);\n\n    socket.on('gameover', data => {\n      window.removeEventListener('devicemotion', listener, false)\n      if (data.draw) {\n        console.log('you... draw?');\n        return $state.go('base.room.draw');\n      }\n      if (data.winner.id === Player.id) {\n        console.log('you win!');\n        $state.go('base.room.win');\n      } else {\n        console.log('you lose!');\n        $state.go('base.room.lose');\n      }\n    })\n\n    function isWinner(data) {\n      return data.winnerId === Player.id\n    }\n\n    function listener(ev) {\n      if (!ev.acceleration) return;\n      const acc = ev.acceleration;\n      jogHandler(acc.x, acc.y, acc.z);\n    }\n\n    function jogHandler(x, y, z) {\n      const arr = [x, y, z]\n      if (arr.filter(overTheLimit).length > 0) {\n        lose();\n      }\n    }\n\n    function overTheLimit(coord) {\n      if (coord > LIMIT) {\n          return true;\n      }\n      return false;\n    }\n\n    function lose() {\n      $scope.playState = 'dead';\n      window.removeEventListener('devicemotion', listener, false);\n      window.navigator.vibrate(2000);\n      socket.emit('loser');\n      console.log('you lost');\n    }\n\n  })\n\napp.controller('endCtrl', \n  ($scope, $state, $stateParams, socket) => {\n\n    $scope.outcome = $stateParams.outcome;\n    $scope.text = $stateParams.text;\n\n    $scope.playAgain = function() {\n      socket.emit('play-again');\n      $state.go('base.room');\n    };\n\n  })\n\n\nangular.module('pebble-bash').config(function (\n  $stateProvider\n) {\n\n  $stateProvider\n    .state('base.room.play', {\n        controller: 'playCtrl',\n        templateUrl: 'play.html'\n      })\n    .state('base.room.win', {\n        controller: 'endCtrl',\n        params: {\n          outcome: 'win',\n          text: 'WINNAH'\n        },\n        templateUrl: 'end.html'\n      })\n    .state('base.room.lose', {\n        controller: 'endCtrl',\n        params: {\n          outcome: 'lose',\n          text: 'LOOZAH'\n        },\n        templateUrl: 'end.html'\n      })\n    .state('base.room.draw', {\n        controller: 'endCtrl',\n        params: {\n          outcome: 'draw',\n          text: 'It\\'s a... draw?'\n        },\n        templateUrl: 'end.html'\n      });\n\n});\n","app.factory('Player', function (\n  $http,\n  $q,\n  $log,\n  $rootScope,\n  socket,\n  $stateParams\n) {\n\n  const Player = {\n    id: '',\n    name: localStorage.playerName || ''\n  };\n\n  const connectedPromise = $q.defer();\n\n  Player.resolveConnect = () => {\n    return connectedPromise.promise;\n  };\n\n  Player.joinRoom = (roomId) => {\n    console.log('emitting join', roomId)\n    Player.room = roomId;\n    socket.emit('join', Player)\n  };\n\n  Player.saveName = () => {\n    localStorage.playerName = Player.name;\n  };\n\n  socket.on('connect', () => {\n    console.log('socket connected');\n    Player.id = socket.getId();\n    if ($stateParams.roomId) {\n      console.log('stateparams exists so joining');\n      Player.joinRoom($stateParams.roomId);\n    }\n    connectedPromise.resolve(Player.id);\n  })\n\n  Player.getId = () => this.id;\n  Player.getName = () => this.name;\n\n  return Player\n})","app.controller('roomCtrl', \n  ($scope, $state, $location, $stateParams, socket, roomJoined, Player) => {\n\n    console.log('starting room controller')\n\n    $scope.others = [];\n\n    $scope.others = $scope.others.concat(roomJoined.others)\n\n    // Update room if new\n    $scope.roomJoined = roomJoined.roomId;\n    $state.go('.', {\n      roomId: $scope.roomJoined\n    }, {reload: false})\n\n    $scope.something = 'yeah';\n    $scope.url = $location.absUrl();\n\n    socket.on('room-update', (others) => {\n      console.log('Room update: ', others)\n      $scope.others = others;\n    })\n\n    console.log('joining room')\n    Player.joinRoom($stateParams.roomId);\n\n    $scope.goBack = () => {\n      socket.emit('leave');\n      $state.go('base');\n    };\n\n    socket.on('start', (msg) => {\n      console.log('STARTING!', msg)\n      $state.go('base.room.play')\n    })\n\n    $scope.ready = () => {\n      if (Player.name && $scope.roomJoined) {\n        Player.saveName();\n        socket.emit('ready', {\n          roomId: $scope.roomJoined,\n          name: Player.name\n        });\n      } else {\n        alert('You have no name? How can you win if you have no name??');\n      }\n    };\n\n  })\n\nangular.module('pebble-bash').config(function (\n  $stateProvider\n) {\n\n  $stateProvider\n    .state('base.room', {\n        url: 'room/:roomId/',\n        controller: 'roomCtrl',\n        templateUrl: 'room.html',\n        resolve: {\n          roomJoined: ($stateParams, apiService, socketConnected, Player) => {\n            return apiService.send(`/room/${$stateParams.roomId}`, {\n              playerId: Player.id,\n              name: Player.name || 'Anonymous'\n            })\n          }\n        }\n      });\n\n});\n","\napp.factory('apiService', function (\n  $http,\n  $q,\n  $log,\n  $rootScope,\n  socket,\n  loading,\n  Player\n) {\n\n  return {\n    send: (url, data) => {\n\n      const deferred = $q.defer();\n\n      loading.start();\n\n      const params = data ? data : {};\n\n      params.name = params.name || Player.name;\n      params.playerId = params.playerId || Player.id;\n\n      localStorage.playerName = Player.name;\n\n      console.log(params)\n\n      $http.post(url, params).then((resp) => {\n        loading.finish();\n        deferred.resolve(resp.data);\n      }, (err) => {\n        loading.finish();\n        alert(err.data.message);\n        deferred.reject();\n      });\n\n      return deferred.promise;\n    }\n  }\n\n})\n","app.factory('socket', function ($rootScope) {\n  var socket = io.connect();\n\n  socket.on('disconnect', () => {\n    console.log('DISCONNECTED FROM SOCKET')\n  })\n\n  socket.on('message', (data) => {\n    console.log('message:', data)\n  })\n\n  return {\n    on: function (eventName, callback) {\n      console.log('registering', eventName)\n      socket.on(eventName, function () {  \n        var args = arguments;\n        $rootScope.$apply(function () {\n          callback.apply(socket, args);\n        });\n      });\n    },\n    emit: function (eventName, data, callback) {\n      socket.emit(eventName, data, function () {\n        var args = arguments;\n        $rootScope.$apply(function () {\n          if (callback) {\n            callback.apply(socket, args);\n          }\n        });\n      })\n    },\n    getId: function() {\n      return socket.id;\n    }\n  };\n});"]}